<?= $this->partial('common/header.phtml', $this) ?>
<h1><?= $this->escape($this->event->name) ?></h1>
<p id="event-description"></p>
<table class="table">
    <thead>
        <tr>
            <th>代稱</th>
            <th>標題</th>
            <th>共筆</th>
            <th>坑主</th>
            <th>成員</th>
        </tr>
    </thead>
    <tbody id="channel-list"></tbody>
</table>
<script id="tmpl-channel-tr" type="text/html">
<tr class="channel-tr">
<td><a href="" target="_blank" class="channel-link"></a></td>
<td class="channel-title"></td>
<td><a href="" target="_blank" class="hackmd-link">HackMD</a></td>
<td class="owner-list"></td>
<td class="member-list"></td>
</tr>
</script>
<script>
var get_user_list = function(users, user_infos){
    var div_dom = $('<div></div>');
    var infos = {};
    for (var user_info of user_infos) {
        infos[user_info.slack_id] = user_info;
    }

    users.map(function(user){
        if ('undefined' === typeof(infos[user])) {
            return;
        }
        div_dom.append($('<div></div>').addClass('card').css('float', 'left').append(
            $('<img>').attr({src: infos[user].avatar, width:50, height:50})
        ).append($('<span></span>').text(infos[user].account)));
    });
    return div_dom;
};
var update_channel_info = function(){
    var event_id = <?= json_encode($this->event->id) ?>;
    $.get('/meet/eventdata/' + event_id, function(ret){
        $('.channel-tr').addClass('checking');
        for (var channel of ret.channels) {
            if (!$('#channel-' + channel.channel_id).length) {
                var dom = $($('#tmpl-channel-tr').html());
                dom.attr('id', 'channel-' + channel.channel_id);
                $('#channel-list').append(dom);
            }
            var dom = $('#channel-' + channel.channel_id);
            $('.channel-link', dom).attr('href', '/meet/channel/' + encodeURIComponent(event_id) + '/' + channel.channel_id).text(channel.name);
            $('.channel-title', dom).text(channel.meta.title);
            if ('' !== channel.meta.hackmd) {
                $('.hackmd-link', dom).attr('href', channel.meta.hackmd).show();
            } else {
                $('.hackmd-link', dom).hide();
            }
            $('.owner-list', dom).html(get_user_list(channel.data.owners, ret.users));
            $('.member-list', dom).html(get_user_list(channel.status.user_list.sort(function(a,b){ return a[1] - b[1]; }).map(function(a) { return a[0]; }), ret.users));
            dom.removeClass('checking');
            dom.data('order', channel.order);
        }
        $('.channel-tr.checking').remove();
        $('.channel-tr').sort(function(a, b) {
            return parseInt($(a).data('order')) - parseInt($(b).data('order'));
        }).appendTo('#channel-list');

        $('#event-description').text(ret.event.data['meet-description']);
    }, 'json');
}
setInterval(update_channel_info, 30000);
update_channel_info();
</script>
<?= $this->partial('common/footer.phtml', $this) ?>
